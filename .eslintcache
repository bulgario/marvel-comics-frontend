[{"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/index.js":"1","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/reportWebVitals.js":"2","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/App.js":"3","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/routes.js":"4","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/consts.js":"5","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/Home/index.js":"6","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/auth.js":"7","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/Login/index.js":"8","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/SignUp/index.js":"9","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/Search/index.js":"10","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/User/Edit.js":"11","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/User/edit.js":"12","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/services/api.js":"13","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/User/favorite.js":"14","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/components/comicCard.js":"15","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/components/ComicCard.js":"16","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/Comic/index.js":"17"},{"size":380,"mtime":1607035038479,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607026904947,"results":"20","hashOfConfig":"19"},{"size":250,"mtime":1607049853155,"results":"21","hashOfConfig":"19"},{"size":1320,"mtime":1607452336493,"results":"22","hashOfConfig":"19"},{"size":217,"mtime":1607452332556,"results":"23","hashOfConfig":"19"},{"size":112,"mtime":1607035684661,"results":"24","hashOfConfig":"19"},{"size":263,"mtime":1607381965362,"results":"25","hashOfConfig":"19"},{"size":3934,"mtime":1607465954764,"results":"26","hashOfConfig":"19"},{"size":5244,"mtime":1607303593763,"results":"27","hashOfConfig":"19"},{"size":6213,"mtime":1607453323925,"results":"28","hashOfConfig":"19"},{"size":3966,"mtime":1607357624940,"results":"29","hashOfConfig":"19"},{"size":5118,"mtime":1607380994267,"results":"30","hashOfConfig":"19"},{"size":348,"mtime":1607389018499,"results":"31","hashOfConfig":"19"},{"size":116,"mtime":1607444719365,"results":"32","hashOfConfig":"19"},{"size":99,"mtime":1607446750461,"results":"33","hashOfConfig":"19"},{"size":1804,"mtime":1607466151295,"results":"34","hashOfConfig":"19"},{"size":4026,"mtime":1607466266146,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"14b3mcm",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/index.js",[],["74","75"],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/reportWebVitals.js",[],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/App.js",[],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/routes.js",[],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/consts.js",[],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/Home/index.js",[],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/auth.js",[],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/Login/index.js",["76"],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/SignUp/index.js",["77","78"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport marvelLoginIcon from \"../../assets/MarvelLogo.svg\";\n\nimport { BASE_URL } from \"../../consts\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n  },\n}));\n\nconst SignUp = (props) => {\n  const classes = useStyles();\n  const [ firstname, setFirstName ] = useState(\"\");\n  const [ lastname, setLastName ] = useState(\"\");\n  const [ email, setEmail ] = useState(\"\");\n  const [ password, setPassword ] = useState(\"\");\n  const [ success, setSuccess ] = useState(false);\n  const [ fail, setFailed ] = useState(false);\n\n  const handleChange = (prop) => eve => {\n    const input = eve.target.value;\n    switch (prop) {\n      case 'firstName':\n        setFirstName(input)\n        break;\n      case 'lastName':\n        setLastName(input)\n        break;\n      case 'email':\n        setEmail(input)\n        break;\n      case 'password':\n        setPassword(input)\n        break;\n    };\n  };\n\n  const handleSubmit = async (eve) => {\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n    if (firstname, lastname, email, password) {\n      eve.preventDefault();\n      try {\n        await axios.post(`${BASE_URL}/cadastro`, {\n          nome: firstname,\n          sobrenome: lastname,\n          email: email,\n          senha: password\n        });\n        setSuccess(true);\n        await delay(2500);\n        props.history.push('/login');\n      } catch (error) {\n        setFailed(true);\n        await delay(2000);\n        console.log(error);\n      }\n      \n    }\n  };\n\n\n  const successMessage = () => (\n    <>\n      <Typography variant=\"h2\" gutterBottom>Conta Criada!</Typography>\n      <Typography variant=\"h5\" gutterBottom>Super Redirecionamento Rolando!</Typography>\n    </>\n  );\n\n  const tryAgain = () => (\n    <>\n      <Typography variant=\"h4\" gutterBottom>Algo aconteceu meu super heroi!</Typography>\n      <Typography variant=\"h5\" gutterBottom>Tente novamente!</Typography>\n    </>\n  )\n\n  const formRegister = () => (\n      <div className={classes.paper}>\n      <Typography component=\"h1\" variant=\"h5\">\n        Login\n      </Typography>\n      <form \n        className={classes.form} \n        noValidate\n        onSubmit={(eve) => handleSubmit(eve)}  \n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              autoComplete=\"fname\"\n              name=\"firstName\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"firstName\"\n              label=\"Nome\"\n              autoFocus\n              onChange={handleChange('firstName')}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"lastName\"\n              label=\"Sobrenome\"\n              name=\"lastName\"\n              autoComplete=\"lname\"\n              onChange={handleChange('lastName')}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              onChange={handleChange('email')}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Senha\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={handleChange('password')}\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Criar super conta\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link href=\"/login\" variant=\"body2\">\n              Já tem uma conta? Logue-se meu herói\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <img \n        src={marvelLoginIcon} \n        alt=\"Marvel Login Icon\" \n        height={500} \n        width={500} \n      />\n      { fail && (\n        tryAgain()\n      ) }\n       {success ? (\n        successMessage()\n      ) : (\n        formRegister()\n      )}\n    </Container>\n  );\n};\n\nexport default withRouter(SignUp);\n","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/Search/index.js",["79"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../consts\";\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { Button } from '@material-ui/core';\nimport { Grid } from '@material-ui/core/';\n\nimport ComicCard from \"../../components/ComicCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  icon: {\n    marginRight: 10,\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  cards: {\n    marginTop: 10\n  }\n  },\n}));\n\nconst Search = (props) => {\n  const classes = useStyles();\n  const [ user, setUser ] = useState({});\n  const [ comicOption, setComicOption ] = useState(false);\n  const [ characterOption, setCharacterOption ] = useState(false);\n  const [ comics, setComics ] = useState({});\n  const [ characters, setCharacters ] = useState({});\n\n  useEffect(() => {\n    getUserData()\n  }, []);\n\n  useEffect(() => {\n    getComicData()\n    getCharacterData()\n  }, [])\n\n  const handleProfileMenuOpen = () => {\n    props.history.push('/edit');\n  };\n\n  const handleFavoriteMenuOpen = () => {\n    props.history.push('/favorite');\n  };\n\n  const getUserData = async () => {\n    const { email } = JSON.parse(window.localStorage.getItem('data'));\n    await axios.get(`${BASE_URL}/user`, {\n      params: {\n        email: email\n      }\n    }).then(res => {\n      setUser(res.data.data);\n    });\n  };\n\n  const getComicData = async () => {\n    try {\n      await axios.get(`${BASE_URL}/comics`)\n      .then(data => {\n        setComics(data.data);\n    });\n    } catch (error) {\n      console.log(\"Error trying get comics\", error)\n    }\n  };\n\n  const getCharacterData = async () => {\n    try {\n      await axios.get(`${BASE_URL}/characters`)\n      .then(data => {\n        setCharacters(data.data);\n    });\n    } catch (error) {\n      console.log(\"Error trying get characters\", error)\n    }\n  };\n\n const handleClick = (type) => {\n    switch (type) {\n      case 'comic':\n        if(characterOption) {\n          setCharacterOption(false)\n          setComicOption(true)\n        } else {\n          setComicOption(true)\n        }\n        break;\n      case 'character':\n        if(comicOption) {\n          setCharacterOption(true)\n          setComicOption(false)\n        } else {\n          setCharacterOption(true)\n        }\n        break;\n      default:\n        break;\n    }\n }\n\n const renderComic = () => (\n  <Grid container spacing={10} >\n    {comics.comics.map(comic => (\n        <Grid item className={classes.cards}>\n          <ComicCard \n            comic={comic}\n            pagination={comics.pagination} \n            history={props.history} \n          />\n        </Grid>\n    ))}\n  </Grid>\n );\n\n const renderCharacter = () => (\n  <div>Character</div>\n);\n\n  return (\n    <div className={classes.grow}>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography className={classes.title} variant=\"h6\" noWrap>\n          Bem vindo,{user.nome}\n        </Typography>\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n          />\n        </div>\n        <div>\n          <Button \n            variant=\"contained\" \n            color=\"primary\"\n            onClick={() => handleClick('comic')}\n          >\n            Comics\n          </Button>\n        </div>\n        <div>\n          <Button \n            variant=\"contained\" \n            color=\"primary\"\n            onClick={ () => handleClick('character')}\n          >\n            Characters\n          </Button>\n        </div>\n        <div className={classes.grow} />\n        <div className={classes.icon}>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"edit\"\n            aria-haspopup=\"true\"\n            onClick={handleProfileMenuOpen}\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n        </div>\n        <div className={classes.icon}>\n          <FavoriteIcon\n            edge=\"end\"\n            aria-label=\"favorite\"\n            aria-haspopup=\"true\"\n            onClick={handleFavoriteMenuOpen}\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </FavoriteIcon>\n        </div>\n      </Toolbar>\n    </AppBar>\n    <div>\n      { comicOption ? (\n        renderComic()\n      ) : characterOption ? (\n        renderCharacter()\n      ) : null}\n    </div>\n  </div>\n  )\n};\n\nexport default Search;","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/User/Edit.js",["80","81","82"],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/User/edit.js",["83","84","85","86"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport api from \"../../services/api\";\nimport { BASE_URL } from \"../../consts\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Grid, Button } from \"@material-ui/core\";\n\nimport MarvelLogo from \"../../assets/MarvelLogo.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    button: {\n      marginBottom: theme.spacing(2),\n      color: \"white\",\n      background: \"#f44336\",\n    },\n  },\n}));\n\nconst User = () => {\n  const classes = useStyles();\n  const [userid, setUserId] = useState();\n  const [email, setUserEmail] = useState({});\n  const [id, setuserId] = useState();\n  const [nome, setUserName] = useState(\"\");\n  const [sobrenome, setUserSurname] = useState(\"\");\n  const [oldPass, setOldPass] = useState(\"\");\n  const [newPass, setNewPass] = useState(\"\");\n\n  const getUserId = async () => {\n    const { email } = JSON.parse(window.localStorage.getItem(\"data\"));\n    try {\n      await axios\n        .get(`${BASE_URL}/user`, {\n          params: {\n            email: email,\n          },\n        })\n        .then((res) => {\n          setUserId(res.data.data.id);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getUserData = async () => {\n    try {\n      await axios.get(`${BASE_URL}/user/${userid}`).then((res) => {\n        setUserEmail(res.data.email)\n        setuserId(res.data.id)\n        setUserName(res.data.nome)\n        setUserSurname(res.data.sobrenome)\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getUserId();\n  }, []);\n\n  useEffect(() => {\n    getUserData();\n  }, [userid]);\n\n  const handleSubmitForm = async (eve) => {\n    eve.preventDefault();\n    try {\n      await api.put(`/user/edit`, {\n        nome: nome,\n        sobrenome: sobrenome,\n        email: email,\n        senhaAntiga: oldPass,\n        senhaNova: newPass\n      });\n    } catch (error) {\n      console.log(\"Erro editar usuário\", error);\n    }\n  };\n\n  const handleChange = (prop) => (eve) => {\n    const input = eve.target.value;\n    switch (prop) {\n      case 'nome':\n        setUserName(input)\n        break;\n      case 'sobrenome':\n        setUserSurname(input)\n        break;\n      case 'senhaAntiga':\n        setOldPass(input)\n        break;\n      case 'senhaNova':\n        setNewPass(input)\n        break;\n    };\n  };\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <form className={classes.root} noValidate autoComplete=\"off\">\n      <Grid item>\n        <img \n          src={MarvelLogo} \n          alt=\"Marvel Login Icon\" \n          height={200} \n          width={200} \n        />\n      </Grid>\n        <Grid item xs={10}>\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Nome\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={nome}\n            onChange={handleChange(\"nome\")}\n          />\n        </Grid>\n        <Grid item xs={10}>\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Sobrenome\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={handleChange(\"nome\")}\n            value={sobrenome}\n            onChange={handleChange(\"sobrenome\")}\n          />\n        </Grid>\n        <Grid item xs={10}>\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Email\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={email}\n            onChange={handleChange(\"email\")}\n          />\n        </Grid>\n        <Grid item xs={10}>\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Senha antiga\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={oldPass}\n            onChange={handleChange(\"senhaAntiga\")}\n          />\n        </Grid>\n        <Grid item xs={10}>\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Senha nova\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={newPass}\n            onChange={handleChange(\"senhaNova\")}\n          />\n        </Grid>\n        <Grid item xs={10}>\n          <Button\n            id=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            fullWidth\n            onClick={(eve) => handleSubmitForm(eve)}\n          >\n            Alterar dado\n          </Button>\n        </Grid>\n        <Grid item xs={10}>\n          <a\n            href=\"/search\"\n          >\n            Voltar\n          </a>\n        </Grid>\n      </form>\n    </Grid>\n  );\n};\n\nexport default User;\n","/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/services/api.js",[],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/User/favorite.js",[],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/components/comicCard.js",[],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/components/ComicCard.js",["87"],"/Users/admin/Desktop/projects/stone-project/marvel-comics-frontend/src/pages/Comic/index.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":44,"column":5,"nodeType":"94","messageId":"95","endLine":51,"endColumn":6},{"ruleId":"92","severity":1,"message":"93","line":47,"column":5,"nodeType":"94","messageId":"95","endLine":60,"endColumn":6},{"ruleId":"96","severity":1,"message":"97","line":65,"column":18,"nodeType":"98","messageId":"99","endLine":65,"endColumn":19},{"ruleId":"100","severity":1,"message":"101","line":87,"column":11,"nodeType":"102","messageId":"103","endLine":87,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":62,"column":6,"nodeType":"106","endLine":62,"endColumn":14,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":114,"column":13,"nodeType":"110","endLine":114,"endColumn":35},{"ruleId":"108","severity":1,"message":"109","line":115,"column":13,"nodeType":"110","endLine":115,"endColumn":49},{"ruleId":"100","severity":1,"message":"111","line":29,"column":10,"nodeType":"102","messageId":"103","endLine":29,"endColumn":12},{"ruleId":"104","severity":1,"message":"105","line":71,"column":6,"nodeType":"106","endLine":71,"endColumn":14,"suggestions":"112"},{"ruleId":"92","severity":1,"message":"93","line":90,"column":5,"nodeType":"94","messageId":"95","endLine":103,"endColumn":6},{"ruleId":"108","severity":1,"message":"109","line":146,"column":13,"nodeType":"110","endLine":146,"endColumn":49},{"ruleId":"100","severity":1,"message":"113","line":34,"column":18,"nodeType":"102","messageId":"103","endLine":34,"endColumn":28},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'characters' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.","ArrayExpression",["116"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'id' is assigned a value but never used.",["117"],"'pagination' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},"Update the dependencies array to be: [getUserData, userid]",{"range":"121","text":"122"},{"range":"123","text":"122"},[1362,1370],"[getUserData, userid]",[1743,1751]]